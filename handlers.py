import logging
from telegram import Update
from telegram.ext import ContextTypes
import config
import utils
from keyboards import *

async def handle_expert_photo(update: Update, context: ContextTypes.DEFAULT_TYPE, photo):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ"""
    user = update.effective_user
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
    file = await context.bot.get_file(photo.file_id)
    image_bytes = await file.download_as_bytearray()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    photo_count = utils.add_expert_photo(user.id, image_bytes)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–º —Ä–µ–∂–∏–º–æ–º
    keyboard = [
        [InlineKeyboardButton("üì∏ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ", callback_data="add_more_photos")],
        [InlineKeyboardButton("‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="add_description")],
        [InlineKeyboardButton("üß¨ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", callback_data="start_expert_analysis_now")],
        [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ", callback_data="clear_expert_data")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    expert_keyboard = InlineKeyboardMarkup(keyboard)
    
    expert_data = utils.get_expert_data(user.id)
    additional_text_status = "‚úÖ –ï—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ" if expert_data and expert_data['additional_text'] else "‚ùå –ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è"
    
    await update.message.reply_text(
        f"üß¨ **–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω!**\n\n"
        f"üì∏ **–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–æ–±—Ä–∞–Ω–æ:** {photo_count}\n"
        f"‚úçÔ∏è **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:** {additional_text_status}\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ:\n"
        f"‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\n"
        f"‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–º–µ—Å—Ç–æ –Ω–∞—Ö–æ–¥–∫–∏, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç.–¥.)\n"
        f"‚Ä¢ –ù–∞—á–∞—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å –∏–º–µ—é—â–∏–º–∏—Å—è –¥–∞–Ω–Ω—ã–º–∏\n\n"
        f"üí° **–°–æ–≤–µ—Ç:** –ë–æ–ª—å—à–µ —Ñ–æ—Ç–æ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è = —Ç–æ—á–Ω–µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!",
        reply_markup=expert_keyboard,
        parse_mode='Markdown'
    )

async def handle_expert_analysis(query):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    user_id = query.from_user.id
    expert_data = utils.get_expert_data(user_id)
    
    if not expert_data or not expert_data['photos']:
        await query.edit_message_text(
            "‚ùå **–ù–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞**\n\n"
            "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Ñ–æ—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏—è!",
            reply_markup=get_expert_mode_keyboard(),
            parse_mode='Markdown'
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–Ω–∞–ª–∏–∑–∞
    await query.edit_message_text(
        f"üß¨ **–ù–∞—á–∏–Ω–∞—é —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑...**\n\n"
        f"üìä **–î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:**\n"
        f"üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(expert_data['photos'])}\n"
        f"‚úçÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {'‚úÖ –ï—Å—Ç—å' if expert_data['additional_text'] else '‚ùå –ù–µ—Ç'}\n\n"
        f"üî¨ –í—ã–ø–æ–ª–Ω—è—é –Ω–∞—É—á–Ω—É—é –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...\n"
        f"‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...",
        parse_mode='Markdown'
    )
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        recognition_info, error = await utils.recognize_plant_expert_mode(
            expert_data['photos'], 
            expert_data['additional_text']
        )
        
        if recognition_info:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            formatted_response = utils.format_expert_response(recognition_info)
            
            await query.edit_message_text(
                formatted_response,
                parse_mode='Markdown'
            )
            
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
            utils.clear_expert_data(user_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
            await query.message.reply_text(
                "üéØ **–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
                "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑?",
                reply_markup=get_main_keyboard()
            )
        else:
            await query.edit_message_text(
                f"‚ùå **–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞**\n\n{error}\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n"
                "‚Ä¢ –£–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n"
                "‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–æ–∑–∂–µ",
                reply_markup=get_expert_mode_keyboard(),
                parse_mode='Markdown'
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        await query.edit_message_text(
            "‚ùå **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞**\n\n"
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",
            reply_markup=get_expert_mode_keyboard(),
            parse_mode='Markdown'
        )

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    welcome_message = utils.get_random_message(config.WELCOME_MESSAGES)
    
    full_message = f"{welcome_message}\n\n–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n–Ø - —Ç–≤–æ–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–∞—Å—Ç–µ–Ω–∏—è–º! üå±\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ª—é–±–æ–≥–æ —Ä–∞—Å—Ç–µ–Ω–∏—è, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –Ω–µ–º –≤—Å–µ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ! üì∏\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:"
    
    await update.message.reply_text(
        full_message,
        reply_markup=get_main_keyboard(),
        parse_mode='Markdown'
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    await utils.check_and_send_promo(update, context, user.id)
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """‚ùì **–ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?**

–Ø - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–∞—Å—Ç–µ–Ω–∏—è–º! –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:

üåø **–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è** –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
üí° **–†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã** –æ –∫–∞–∂–¥–æ–º —Ä–∞—Å—Ç–µ–Ω–∏–∏
üåç **–û–±—ä—è—Å–Ω—è—Ç—å**, –≥–¥–µ —Ä–∞—Å—Ç–µ—Ç —Ä–∞—Å—Ç–µ–Ω–∏–µ
üå∏ **–ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å** –æ –ø–µ—Ä–∏–æ–¥–µ —Ü–≤–µ—Ç–µ–Ω–∏—è
üè† **–î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã** –ø–æ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—é –¥–æ–º–∞

**–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
1. üì∏ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è
2. üîç –Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
3. üå± –ü–æ–ª—É—á–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!

–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:"""
    
    await update.message.reply_text(
        help_text,
        reply_markup=get_help_keyboard(),
        parse_mode='Markdown'
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    user = update.effective_user
    await utils.check_and_send_promo(update, context, user.id)

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about"""
    about_text = """‚ÑπÔ∏è **–û –±–æ—Ç–µ "–†–∞—Å—Ç–µ–Ω–∏—è-–≠–∫—Å–ø–µ—Ä—Ç"**

–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–∏—Ä–µ —Ä–∞—Å—Ç–µ–Ω–∏–π! üå±

**–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ üîç –¢–æ—á–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏–π –ø–æ —Ñ–æ—Ç–æ
‚Ä¢ üìö –û–±—à–∏—Ä–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –æ —Ä–∞—Å—Ç–µ–Ω–∏—è—Ö
‚Ä¢ üí° –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ —Å–æ–≤–µ—Ç—ã
‚Ä¢ üåç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–∞—Ö –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞–Ω–∏—è
‚Ä¢ üè† –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ–º–∞—à–Ω–µ–º—É –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—é

**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
‚Ä¢ ü§ñ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç Qwen
‚Ä¢ üì∏ –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ üåê OpenRouter API

–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ:"""
    
    await update.message.reply_text(
        about_text,
        reply_markup=get_about_keyboard(),
        parse_mode='Markdown'
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    user = update.effective_user
    await utils.check_and_send_promo(update, context, user.id)

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    user = update.effective_user
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    recognition_mode = utils.get_user_recognition_mode(user.id)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ —Å –ª—É—á—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º
    photo = update.message.photo[-1]
    
    if recognition_mode == "expert":
        # –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
        await handle_expert_photo(update, context, photo)
        return
    
    # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏–π
    processing_message = utils.get_random_message(config.PHOTO_MESSAGES)
    
    status_message = await update.message.reply_text(
        f"{processing_message}\n\n‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...",
        reply_markup=get_main_menu_inline()
    )
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
        file = await context.bot.get_file(photo.file_id)
        image_bytes = await file.download_as_bytearray()
        
        # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–∞—Å—Ç–µ–Ω–∏–µ
        recognition_info, error = await utils.recognize_plant_with_qwen(image_bytes)
        formatted_response = utils.format_plant_response(recognition_info) if recognition_info else None
        log_message = "—Ä–∞—Å—Ç–µ–Ω–∏–µ"
        
        if recognition_info:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await update.message.reply_text(
                formatted_response,
                reply_markup=get_main_keyboard(),
                parse_mode='Markdown'
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            await utils.check_and_send_promo(update, context, user.id)
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª {log_message}")
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            error_message = f"‚ùå {error}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —á–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏—è! üì∏"
            
            await update.message.reply_text(
                error_message,
                reply_markup=get_restart_keyboard()
            )
            
            logger.warning(f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è {log_message} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {error}")
        
        # –û—á–∏—â–∞–µ–º —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ
        utils.clear_user_recognition_mode(user.id)
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑! üîÑ",
            reply_markup=get_restart_keyboard()
        )
        # –û—á–∏—â–∞–µ–º —Ä–µ–∂–∏–º –ø—Ä–∏ –æ—à–∏–±–∫–µ
        utils.clear_user_recognition_mode(user.id)
    
    finally:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await status_message.delete()
        except:
            pass

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.effective_user
    text = update.message.text.lower()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –≤ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
    expert_data = utils.get_expert_data(user.id)
    if expert_data and expert_data.get('waiting_for_text'):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        utils.set_expert_additional_text(user.id, update.message.text)
        utils.set_expert_waiting_state(user.id, waiting_for_text=False)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        keyboard = [
            [InlineKeyboardButton("üì∏ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ", callback_data="add_more_photos")],
            [InlineKeyboardButton("‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="add_description")], 
            [InlineKeyboardButton("üß¨ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", callback_data="start_expert_analysis_now")],
            [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ", callback_data="clear_expert_data")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        expert_keyboard = InlineKeyboardMarkup(keyboard)
        
        photo_count = len(expert_data['photos'])
        await update.message.reply_text(
            f"‚úÖ **–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!**\n\n"
            f"üì∏ **–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:** {photo_count}\n"
            f"‚úçÔ∏è **–û–ø–∏—Å–∞–Ω–∏–µ:** ‚úÖ –ï—Å—Ç—å\n\n"
            f"üìù **–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:**\n_{update.message.text}_\n\n"
            f"–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑!",
            reply_markup=expert_keyboard,
            parse_mode='Markdown'
        )
        return
    
    if "—Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ" in text or "—Ä–∞—Å—Ç–µ–Ω–∏–µ" in text:
        utils.set_user_recognition_mode(user.id, "plant")
        await update.message.reply_text(
            "üåø –û—Ç–ª–∏—á–Ω–æ! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è, –∏ —è –µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—é!\n\nüì∏ –ü—Ä–æ—Å—Ç–æ —Å–¥–µ–ª–∞–π —Ñ–æ—Ç–æ –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏.",
            reply_markup=get_main_menu_inline()
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif "—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º" in text or "—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π" in text:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
        expert_info_text = """üß¨ **–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è**

üéØ **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:**

‚Ä¢ üì∏ **–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏** - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∫—É—Ä—Å–æ–≤ —Ä–∞—Å—Ç–µ–Ω–∏—è
‚Ä¢ ‚úçÔ∏è **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** - –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –Ω–∞—Ö–æ–¥–∫–∏, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
‚Ä¢ üî¨ **–ù–∞—É—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑** - –¥–µ—Ç–∞–ª—å–Ω–∞—è –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞  
‚Ä¢ üìä **–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è** - –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—è–º–∏
‚Ä¢ üß† **–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è** - —É–≤–∏–¥–∏—Ç–µ –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ —Ç–æ—á–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
‚Ä¢ –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫ –∞–Ω–∞–ª–∏–∑—É
‚Ä¢ –£—á–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

–ì–æ—Ç–æ–≤—ã –∫ –Ω–∞—É—á–Ω–æ–º—É –ø–æ–¥—Ö–æ–¥—É? üî¨"""

        await update.message.reply_text(
            expert_info_text,
            reply_markup=get_expert_mode_keyboard(),
            parse_mode='Markdown'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif "—Ü–≤–µ—Ç–æ—á–Ω—ã–π —Ç–µ—Å—Ç –ª—é—à–µ—Ä–∞" in text or "—Ü–≤–µ—Ç–æ—á–Ω—ã–π —Ç–µ—Å—Ç" in text:
        flower_test_text = """üå∏ **–¶–≤–µ—Ç–æ—á–Ω—ã–π —Ç–µ—Å—Ç –õ—é—à–µ—Ä–∞**

–û–≥–æ! –£–∑–Ω–∞–ª —á—Ç–æ –∑–∞ —Ü–≤–µ—Ç–æ—á–µ–∫ –Ω–∞ —Ñ–æ—Ç–æ, –∞ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —á—Ç–æ –∑–∞ —Ü–≤–µ—Ç–æ—á–µ–∫ —Ç—ã —Å–∞–º? üòâ

üå∫ –≠—Ç–æ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ:
‚Ä¢ –£–∑–Ω–∞—Ç—å –æ —Å–≤–æ–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –∫–∞—á–µ—Å—Ç–≤–∞—Ö
‚Ä¢ –ü–æ–Ω—è—Ç—å —Å–≤–æ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –ª–∏—á–Ω–æ—Å—Ç–∏

–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –≤—ã–±–æ—Ä–µ —Ü–≤–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤—è—Ç—Å—è. –ö–∞–∂–¥—ã–π —Ü–≤–µ—Ç —Ä–∞—Å—Å–∫–∞–∂–µ—Ç —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ –æ —Ç–µ–±–µ!

–ì–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–π —Ç—ã —Ü–≤–µ—Ç–æ—á–µ–∫? üå∏"""
        
        await update.message.reply_text(
            flower_test_text,
            reply_markup=get_flower_test_keyboard(),
            parse_mode='Markdown'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif "–æ –±–æ—Ç–µ" in text or "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" in text:
        await about_command(update, context)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif "–ø–æ–º–æ—â—å" in text or "help" in text:
        await help_command(update, context)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif "–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å" in text or "–æ—Ç–∑—ã–≤" in text:
        feedback_text = """üíö **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å**

–ú–Ω–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ —Ç–≤–æ–µ –º–Ω–µ–Ω–∏–µ! –†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —è —Ä–∞–±–æ—Ç–∞—é:

‚Ä¢ ‚≠ê –û—Ü–µ–Ω–∏ –º–æ—é —Ä–∞–±–æ—Ç—É
‚Ä¢ üí¨ –ü—Ä–µ–¥–ª–æ–∂–∏ —É–ª—É—á—à–µ–Ω–∏—è
‚Ä¢ üêõ –°–æ–æ–±—â–∏ –æ–± –æ—à–∏–±–∫–∞—Ö
‚Ä¢ üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
‚Ä¢ ü§ù –ó–∞–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–µ–≥–æ –±–æ—Ç–∞
‚Ä¢ üíù –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç

–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:"""
        
        await update.message.reply_text(
            feedback_text,
            reply_markup=get_feedback_keyboard(),
            parse_mode='Markdown'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif any(word in text for word in ["–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–∞–¥–º–∏–Ω", "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "—Å–≤—è–∑–∞—Ç—å—Å—è", "–ø–æ–º–æ—â—å —Å –±–æ—Ç–æ–º"]):
        admin_link, message_text = utils.get_admin_link_with_text("support")
        contact_text = f"""üë®‚Äçüíº **–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º**

üîó **–ù–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É**, —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É:
[–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É]({admin_link})

üìù **–ì–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:**
```
{message_text}
```

üí¨ –°–∫–æ–ø–∏—Ä—É–π —Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!"""
        
        await update.message.reply_text(
            contact_text,
            reply_markup=get_feedback_keyboard(),
            parse_mode='Markdown'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif any(word in text for word in ["–∑–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞", "—Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "–±–∏–∑–Ω–µ—Å"]):
        admin_link, message_text = utils.get_admin_link_with_text("order_bot")
        order_text = f"""ü§ù **–ó–∞–∫–∞–∑ –±–æ—Ç–∞**

–•–æ—Ç–∏—Ç–µ –ø–æ—Ö–æ–∂–µ–≥–æ –±–æ—Ç–∞? –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!

üîó **–ù–∞–ø–∏—Å–∞—Ç—å –æ –∑–∞–∫–∞–∑–µ:**
[–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º]({admin_link})

üìù **–ì–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:**
```
{message_text}
```

üöÄ –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –≤–∞—à –ø—Ä–æ–µ–∫—Ç!"""
        
        await update.message.reply_text(
            order_text,
            reply_markup=get_feedback_keyboard(),
            parse_mode='Markdown'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif any(word in text for word in ["–ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å", "–¥–æ–Ω–∞—Ç", "—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å"]):
        admin_link, message_text = utils.get_admin_link_with_text("support_project")
        support_text = f"""üíù **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞**

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç! üôè

üîó **–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º:**
[–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É]({admin_link})

üìù **–ì–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:**
```
{message_text}
```

–í–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç! üíö"""
        
        await update.message.reply_text(
            support_text,
            reply_markup=get_feedback_keyboard(),
            parse_mode='Markdown'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)
    
    elif any(word in text for word in ["—É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏", "—É—Ä–æ–∫–∏", "–±–∏–æ–ª–æ–≥–∏—è", "–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É—Ä–æ–∫–∏"]):
        await lessons_command(update, context)
    
    else:
        await update.message.reply_text(
            "ü§î –ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å.\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è, –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é! üåø",
            reply_markup=get_main_keyboard()
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await utils.check_and_send_promo(update, context, user.id)

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "main_menu":
        welcome_message = utils.get_random_message(config.WELCOME_MESSAGES)
        user = update.effective_user
        
        full_message = f"{welcome_message}\n\n–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n–Ø - —Ç–≤–æ–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–∞—Å—Ç–µ–Ω–∏—è–º! üå±\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ª—é–±–æ–≥–æ —Ä–∞—Å—Ç–µ–Ω–∏—è, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –Ω–µ–º –≤—Å–µ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ! üì∏\n\n–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:"
        
        await query.edit_message_text(
            full_message,
            reply_markup=get_main_keyboard_inline(),
            parse_mode='Markdown'
        )
    
    elif query.data == "help_photo":
        help_photo_text = """üì∏ **–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏—è:**

1. **–°–¥–µ–ª–∞–π –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ:**
   ‚Ä¢ –ù–∞–∂–º–∏ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É üìé
   ‚Ä¢ –í—ã–±–µ—Ä–∏ "–ö–∞–º–µ—Ä–∞" üì±
   ‚Ä¢ –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π —Ä–∞—Å—Ç–µ–Ω–∏–µ
   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ

2. **–í—ã–±–µ—Ä–∏ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏:**
   ‚Ä¢ –ù–∞–∂–º–∏ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É üìé
   ‚Ä¢ –í—ã–±–µ—Ä–∏ "–ì–∞–ª–µ—Ä–µ—è" üñºÔ∏è
   ‚Ä¢ –ù–∞–π–¥–∏ —Ñ–æ—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏—è
   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ

**–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:**
‚Ä¢ üì± –§–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–µ—Ç–∫–∏–º
‚Ä¢ üåø –†–∞—Å—Ç–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –∫–∞–¥—Ä–∞
‚Ä¢ ‚òÄÔ∏è –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ
‚Ä¢ üîç –§–æ–∫—É—Å –Ω–∞ —Ä–∞—Å—Ç–µ–Ω–∏–∏, –∞ –Ω–µ –Ω–∞ —Ñ–æ–Ω–µ"""
        
        await query.edit_message_text(
            help_photo_text,
            reply_markup=get_photo_tips_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "help_tips":
        tips_text = """üå± **–°–æ–≤–µ—Ç—ã –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω–∏—é —Ä–∞—Å—Ç–µ–Ω–∏–π:**

**–î–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:**

üì∏ **–ö–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Ö–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ ‚òÄÔ∏è
‚Ä¢ –§–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–µ—Ç–∫–∏–º –∏ –Ω–µ —Ä–∞–∑–º—ã—Ç—ã–º
‚Ä¢ –ò–∑–±–µ–≥–∞–π —Ç–µ–Ω–µ–π –∏ –±–ª–∏–∫–æ–≤

üåø **–ö–æ–º–ø–æ–∑–∏—Ü–∏—è:**
‚Ä¢ –†–∞—Å—Ç–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å 70-80% –∫–∞–¥—Ä–∞
‚Ä¢ –ü–æ–∫–∞–∂–∏ –ª–∏—Å—Ç—å—è, —Ü–≤–µ—Ç—ã, —Å—Ç–µ–±–µ–ª—å
‚Ä¢ –£–±–µ—Ä–∏ –æ—Ç–≤–ª–µ–∫–∞—é—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å —Ñ–æ–Ω–∞

üîç **–î–µ—Ç–∞–ª–∏:**
‚Ä¢ –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —á–∞—Å—Ç–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è
‚Ä¢ –ï—Å–ª–∏ –µ—Å—Ç—å —Ü–≤–µ—Ç—ã - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏ –∏—Ö
‚Ä¢ –ü–æ–∫–∞–∂–∏ —Ñ–æ—Ä–º—É –ª–∏—Å—Ç—å–µ–≤

**–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö —Ñ–æ—Ç–æ:**
‚Ä¢ –ö—Ä—É–ø–Ω—ã–π –ø–ª–∞–Ω –ª–∏—Å—Ç–∞ –∏–ª–∏ —Ü–≤–µ—Ç–∫–∞
‚Ä¢ –û–±—â–∏–π –≤–∏–¥ —Ä–∞—Å—Ç–µ–Ω–∏—è –Ω–∞ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–º —Ñ–æ–Ω–µ
‚Ä¢ –§–æ—Ç–æ –≤ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏"""
        
        await query.edit_message_text(
            tips_text,
            reply_markup=get_photo_tips_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "help_features":
        features_text = """üîç **–ß—Ç–æ —è —É–º–µ—é:**

üåø **–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏–π:**
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è—é –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è
‚Ä¢ –û–ø–∏—Å—ã–≤–∞—é –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥
‚Ä¢ –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã

üåç **–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
‚Ä¢ –ì–¥–µ —Ä–∞—Å—Ç–µ—Ç —Ä–∞—Å—Ç–µ–Ω–∏–µ –≤ –ø—Ä–∏—Ä–æ–¥–µ
‚Ä¢ –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è
‚Ä¢ –¢–∏–ø –ø–æ—á–≤—ã –∏ —Å—Ä–µ–¥—ã –æ–±–∏—Ç–∞–Ω–∏—è

üå∏ **–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü–µ—Ä–∏–æ–¥ —Ü–≤–µ—Ç–µ–Ω–∏—è
‚Ä¢ –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞
‚Ä¢ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —É—Ö–æ–¥–∞

üè† **–î–æ–º–∞—à–Ω–µ–µ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ:**
‚Ä¢ –ú–æ–∂–Ω–æ –ª–∏ –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å –¥–æ–º–∞
‚Ä¢ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É—Ö–æ–¥—É
‚Ä¢ –°–æ–≤–µ—Ç—ã –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é

üí° **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –†–∞–±–æ—Ç–∞—é —Å –ª—é–±—ã–º–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏
‚Ä¢ –ü–æ–Ω–∏–º–∞—é —Ñ–æ—Ç–æ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
‚Ä¢ –î–∞—é –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å —ç–º–æ–¥–∑–∏"""
        
        await query.edit_message_text(
            features_text,
            reply_markup=get_help_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "about_features":
        about_features_text = """üåü **–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**

üåø **–¢–æ—á–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ:**
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è—é –±–æ–ª–µ–µ 10,000 –≤–∏–¥–æ–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π
‚Ä¢ –†–∞–±–æ—Ç–∞—é —Å —Ü–≤–µ—Ç–∞–º–∏, –¥–µ—Ä–µ–≤—å—è–º–∏, —Ç—Ä–∞–≤–∞–º–∏
‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞—é –¥–∞–∂–µ —Ä–µ–¥–∫–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã

üìö **–û–±—à–∏—Ä–Ω—ã–µ –∑–Ω–∞–Ω–∏—è:**
‚Ä¢ –ù–∞—É—á–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏–π
‚Ä¢ –ù–∞—Ä–æ–¥–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –ª–µ–≥–µ–Ω–¥—ã
‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ –∏—Å—Ç–æ—Ä–∏–∏

üåç **–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
‚Ä¢ –ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç—ã –∏ —Å—Ç—Ä–∞–Ω—ã –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞–Ω–∏—è
‚Ä¢ –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–æ–Ω—ã
‚Ä¢ –¢–∏–ø—ã —ç–∫–æ—Å–∏—Å—Ç–µ–º

üè† **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã:**
‚Ä¢ –£—Å–ª–æ–≤–∏—è –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è –¥–æ–º–∞
‚Ä¢ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ–ª–∏–≤—É –∏ —Å–≤–µ—Ç—É
‚Ä¢ –°–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É

üíö **–î—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç—å:**
‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–µ —ç–º–æ–¥–∑–∏
‚Ä¢ –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π"""
        
        await query.edit_message_text(
            about_features_text,
            reply_markup=get_about_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "about_tech":
        tech_text = """üîß **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**

ü§ñ **–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç:**
‚Ä¢ –ú–æ–¥–µ–ª—å Qwen 2.5 7B Instruct
‚Ä¢ –û–±—É—á–µ–Ω–∞ –Ω–∞ –º–∏–ª–ª–∏–æ–Ω–∞—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ä–∞—Å—Ç–µ–Ω–∏–π
‚Ä¢ –ü–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–µ—Ç–∞–ª–∏

üì∏ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ —Ñ–æ—Ç–æ
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è API
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤

üåê **API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:**
‚Ä¢ OpenRouter –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ AI –º–æ–¥–µ–ª—è–º
‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
‚Ä¢ –ù–∞–¥–µ–∂–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤

üíª **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:**
‚Ä¢ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π

üîí **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**
‚Ä¢ –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ API –∫–ª—é—á–∏
‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        
        await query.edit_message_text(
            tech_text,
            reply_markup=get_about_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "about_examples":
        examples_text = """üí° **–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã:**

üåπ **–†–æ–∑–∞:**
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: –†–æ–∑–∞ (Rosa)
‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: –ö—Ä–∞—Å–∏–≤—ã–π —Ü–≤–µ—Ç–æ–∫ —Å –∞—Ä–æ–º–∞—Ç–Ω—ã–º–∏ –ª–µ–ø–µ—Å—Ç–∫–∞–º–∏
‚Ä¢ –§–∞–∫—Ç: –†–æ–∑—ã –≤—ã—Ä–∞—â–∏–≤–∞—é—Ç –±–æ–ª–µ–µ 5000 –ª–µ—Ç
‚Ä¢ –ì–¥–µ —Ä–∞—Å—Ç–µ—Ç: –°–∞–¥—ã, –ø–∞—Ä–∫–∏, –¥–∏–∫–∞—è –ø—Ä–∏—Ä–æ–¥–∞
‚Ä¢ –¶–≤–µ—Ç–µ–Ω–∏–µ: –í–µ—Å–Ω–∞-–æ—Å–µ–Ω—å
‚Ä¢ –î–æ–º–∞: –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è

üåµ **–ö–∞–∫—Ç—É—Å:**
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: –ö–∞–∫—Ç—É—Å (Cactaceae)
‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: –°—É–∫–∫—É–ª–µ–Ω—Ç —Å –∫–æ–ª—é—á–∫–∞–º–∏
‚Ä¢ –§–∞–∫—Ç: –ú–æ–≥—É—Ç –∂–∏—Ç—å –±–µ–∑ –≤–æ–¥—ã –º–µ—Å—è—Ü–∞–º–∏
‚Ä¢ –ì–¥–µ —Ä–∞—Å—Ç–µ—Ç: –ü—É—Å—Ç—ã–Ω–∏, –∑–∞—Å—É—à–ª–∏–≤—ã–µ —Ä–µ–≥–∏–æ–Ω—ã
‚Ä¢ –¶–≤–µ—Ç–µ–Ω–∏–µ: –†–∞–∑–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞
‚Ä¢ –î–æ–º–∞: –û—á–µ–Ω—å –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤ –≤ —É—Ö–æ–¥–µ

üåª **–ü–æ–¥—Å–æ–ª–Ω—É—Ö:**
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: –ü–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∏–∫ (Helianthus)
‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: –í—ã—Å–æ–∫–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ —Å –∂–µ–ª—Ç—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
‚Ä¢ –§–∞–∫—Ç: –¶–≤–µ—Ç—ã –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—é—Ç—Å—è –∫ —Å–æ–ª–Ω—Ü—É
‚Ä¢ –ì–¥–µ —Ä–∞—Å—Ç–µ—Ç: –ü–æ–ª—è, —Å–∞–¥—ã, –æ–±–æ—á–∏–Ω—ã –¥–æ—Ä–æ–≥
‚Ä¢ –¶–≤–µ—Ç–µ–Ω–∏–µ: –õ–µ—Ç–æ-–æ—Å–µ–Ω—å
‚Ä¢ –î–æ–º–∞: –ú–æ–∂–Ω–æ –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å –Ω–∞ –±–∞–ª–∫–æ–Ω–µ"""
        
        await query.edit_message_text(
            examples_text,
            reply_markup=get_about_keyboard(),
            parse_mode='Markdown'
        )
    

    
    elif query.data == "new_photo" or query.data == "new_photo_plant":
        utils.set_user_recognition_mode(query.from_user.id, "plant")
        await query.edit_message_text(
            "üì± **–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏—è:**\n\n–û—Ç–ª–∏—á–Ω–æ! –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—é! üåø\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è, –∏ —è –µ–≥–æ –∏–∑—É—á—É! üì∏\n\n–ü–æ–º–Ω–∏ —Å–æ–≤–µ—Ç—ã:\n‚Ä¢ –ß–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ\n‚Ä¢ –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ\n‚Ä¢ –†–∞—Å—Ç–µ–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –∫–∞–¥—Ä–∞\n\n–ñ–¥—É —Ç–≤–æ–µ —Ñ–æ—Ç–æ! üíö",
            reply_markup=get_main_menu_inline(),
            parse_mode='Markdown'
        )
    
    elif query.data == "expert_mode":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
        expert_info_text = """üß¨ **–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è**

üéØ **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:**

‚Ä¢ üì∏ **–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏** - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∫—É—Ä—Å–æ–≤ —Ä–∞—Å—Ç–µ–Ω–∏—è
‚Ä¢ ‚úçÔ∏è **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** - –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –Ω–∞—Ö–æ–¥–∫–∏, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
‚Ä¢ üî¨ **–ù–∞—É—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑** - –¥–µ—Ç–∞–ª—å–Ω–∞—è –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞  
‚Ä¢ üìä **–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è** - –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—è–º–∏
‚Ä¢ üß† **–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è** - —É–≤–∏–¥–∏—Ç–µ –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ —Ç–æ—á–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
‚Ä¢ –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫ –∞–Ω–∞–ª–∏–∑—É
‚Ä¢ –£—á–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

–ì–æ—Ç–æ–≤—ã –∫ –Ω–∞—É—á–Ω–æ–º—É –ø–æ–¥—Ö–æ–¥—É? üî¨"""

        await query.edit_message_text(
            expert_info_text,
            reply_markup=get_expert_mode_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "start_expert_analysis":
        utils.set_user_recognition_mode(query.from_user.id, "expert")
        await query.edit_message_text(
            "üß¨ **–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**\n\n"
            "üì∏ **–®–∞–≥ 1:** –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏—è\n\n"
            "üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏:**\n"
            "‚Ä¢ –û–±—â–∏–π –≤–∏–¥ —Ä–∞—Å—Ç–µ–Ω–∏—è (–≥–∞–±–∏—Ç—É—Å)\n"
            "‚Ä¢ –ö—Ä—É–ø–Ω—ã–π –ø–ª–∞–Ω –ª–∏—Å—Ç—å–µ–≤\n" 
            "‚Ä¢ –¶–≤–µ—Ç–∫–∏/—Å–æ—Ü–≤–µ—Ç–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)\n"
            "‚Ä¢ –ü–ª–æ–¥—ã/—Å–µ–º–µ–Ω–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)\n"
            "‚Ä¢ –ú–µ—Å—Ç–æ –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞–Ω–∏—è\n\n"
            "–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
            "‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Ö–æ–¥–∫–∏\n"
            "üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
            "üî¨ –ù–∞—á–∞—Ç—å –Ω–∞—É—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑\n\n"
            "üéØ –ù–∞—á–∏–Ω–∞–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!",
            reply_markup=get_main_menu_inline(),
            parse_mode='Markdown'
        )
    
    elif query.data == "flower_test":
        flower_test_text = """üå∏ **–¶–≤–µ—Ç–æ—á–Ω—ã–π —Ç–µ—Å—Ç –õ—é—à–µ—Ä–∞**

–û–≥–æ! –£–∑–Ω–∞–ª —á—Ç–æ –∑–∞ —Ü–≤–µ—Ç–æ—á–µ–∫ –Ω–∞ —Ñ–æ—Ç–æ, –∞ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —á—Ç–æ –∑–∞ —Ü–≤–µ—Ç–æ—á–µ–∫ —Ç—ã —Å–∞–º? üòâ

üå∫ –≠—Ç–æ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ:
‚Ä¢ –£–∑–Ω–∞—Ç—å –æ —Å–≤–æ–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –∫–∞—á–µ—Å—Ç–≤–∞—Ö
‚Ä¢ –ü–æ–Ω—è—Ç—å —Å–≤–æ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –ª–∏—á–Ω–æ—Å—Ç–∏

–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –≤—ã–±–æ—Ä–µ —Ü–≤–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤—è—Ç—Å—è. –ö–∞–∂–¥—ã–π —Ü–≤–µ—Ç —Ä–∞—Å—Å–∫–∞–∂–µ—Ç —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ –æ —Ç–µ–±–µ!

–ì–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–π —Ç—ã —Ü–≤–µ—Ç–æ—á–µ–∫? üå∏"""
        
        await query.edit_message_text(
            flower_test_text,
            reply_markup=get_flower_test_keyboard(),
            parse_mode='Markdown'
        )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    elif query.data == "add_more_photos":
        await query.edit_message_text(
            "üì∏ **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π**\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è.\n\n"
            "üí° **–ü–æ–ª–µ–∑–Ω—ã–µ —Ä–∞–∫—É—Ä—Å—ã:**\n"
            "‚Ä¢ –†–∞–∑–Ω—ã–µ —á–∞—Å—Ç–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è (–ª–∏—Å—Ç—å—è, —Å—Ç–µ–±–µ–ª—å, —Ü–≤–µ—Ç—ã)\n"
            "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ —Å–Ω–∏–º–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤\n"
            "‚Ä¢ –ú–µ—Å—Ç–æ –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞–Ω–∏—è (–±–∏–æ—Ç–æ–ø)\n\n"
            "–ö–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫ –∞–Ω–∞–ª–∏–∑—É!",
            reply_markup=get_main_menu_inline(),
            parse_mode='Markdown'
        )
    
    elif query.data == "add_description":
        utils.set_expert_waiting_state(query.from_user.id, waiting_for_text=True)
        await query.edit_message_text(
            "‚úçÔ∏è **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ**\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π:\n\n"
            "üìù **–ß—Ç–æ —É–∫–∞–∑–∞—Ç—å:**\n"
            "‚Ä¢ –ú–µ—Å—Ç–æ –Ω–∞—Ö–æ–¥–∫–∏ (–ª–µ—Å, –ø–æ–ª–µ, —Å–∞–¥, –±–æ–ª–æ—Ç–æ)\n"
            "‚Ä¢ –í—Ä–µ–º—è –≥–æ–¥–∞ –∏ —É—Å–ª–æ–≤–∏—è\n"
            "‚Ä¢ –†–∞–∑–º–µ—Ä—ã —Ä–∞—Å—Ç–µ–Ω–∏—è\n"
            "‚Ä¢ –û—Å–æ–±—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∏–ª–∏ –∑–∞–ø–∞—Ö\n"
            "‚Ä¢ –õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º üëá",
            reply_markup=get_main_menu_inline(),
            parse_mode='Markdown'
        )
    
    elif query.data == "start_expert_analysis_now":
        await handle_expert_analysis(query)
    
    elif query.data == "clear_expert_data":
        utils.clear_expert_data(query.from_user.id)
        await query.edit_message_text(
            "üóëÔ∏è **–î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã**\n\n"
            "–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã.\n"
            "–ú–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ!",
            reply_markup=get_expert_mode_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "expert_info":
        expert_help_text = """üß¨ **–ß—Ç–æ —Ç–∞–∫–æ–µ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º?**

üéØ **–≠—Ç–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–∂–∏–º** –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–∞—É—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –±–æ—Ç–∞–Ω–∏–∫–∏.

**üî¨ –ù–∞—É—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥:**
‚Ä¢ –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–æ–≤
‚Ä¢ –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è
‚Ä¢ –£—á–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –±–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∏–º–∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö

**üì∏ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –ø–æ–º–æ–≥–∞—é—Ç:**
‚Ä¢ –£–≤–∏–¥–µ—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–æ–¥ —Ä–∞–∑–Ω—ã–º–∏ —É–≥–ª–∞–º–∏
‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏ —Å—Ç—Ä–æ–µ–Ω–∏—è
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏
‚Ä¢ –û—Ü–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞–Ω–∏—è

**‚úçÔ∏è –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–∞–µ—Ç:**
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∏–æ—Ç–æ–ø–µ
‚Ä¢ –î–∞–Ω–Ω—ã–µ –æ —Ä–∞–∑–º–µ—Ä–∞—Ö
‚Ä¢ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–µ –≤–∏–¥–Ω—ã–µ –Ω–∞ —Ñ–æ—Ç–æ
‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç

**üí° –†–µ–∑—É–ª—å—Ç–∞—Ç:** –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–µ –∏ –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ!"""

        await query.edit_message_text(
            expert_help_text,
            reply_markup=get_expert_mode_keyboard(),
            parse_mode='Markdown'
        )
    
    elif query.data == "restart":
        welcome_message = utils.get_random_message(config.WELCOME_MESSAGES)
        user = update.effective_user
        
        full_message = f"{welcome_message}\n\n–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n–Ø - —Ç–≤–æ–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–∞—Å—Ç–µ–Ω–∏—è–º! üå±\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ª—é–±–æ–≥–æ —Ä–∞—Å—Ç–µ–Ω–∏—è, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –Ω–µ–º –≤—Å–µ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ! üì∏\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:"
        
        await query.edit_message_text(
            full_message,
            reply_markup=get_main_keyboard_inline(),
            parse_mode='Markdown'
        )
    

    
    elif query.data == "subscribe_lessons":
        # –î–ª—è callback –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–ø—Ä—è–º—É—é
        user = query.from_user
        user_id = user.id
        
        # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        utils.subscribe_to_biology_lessons(user_id)
        
        success_text = """‚úÖ **–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!**

üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–∏–Ω–∏-—É—Ä–æ–∫–∏ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏!

üìÖ **–ß—Ç–æ –¥–∞–ª—å—à–µ:**
‚Ä¢ –ü–µ—Ä–≤—ã–π —É—Ä–æ–∫ –ø—Ä–∏–¥–µ—Ç –∑–∞–≤—Ç—Ä–∞ –≤ 10:00
‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–æ–≤–∞—è —Ç–µ–º–∞
‚Ä¢ –£—Ä–æ–∫–∏ –±—É–¥—É—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∏ –ø—Ä–æ—Å—Ç—ã–º–∏

üî¨ –ê –ø–æ–∫–∞ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üëá"""
        
        await query.edit_message_text(
            success_text,
            reply_markup=get_lessons_subscribed_keyboard(),
            parse_mode='Markdown'
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏ —á–µ—Ä–µ–∑ callback")
    
    elif query.data == "unsubscribe_lessons":
        # –î–ª—è callback –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–ø–∏—Å–∫—É –Ω–∞–ø—Ä—è–º—É—é
        user = query.from_user
        user_id = user.id
        
        # –û—Ç–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        utils.unsubscribe_from_biology_lessons(user_id)
        
        unsubscribe_text = """‚ùå **–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞**

–ñ–∞–ª—å, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏! üò¢

üîÑ **–í –ª—é–±–æ–µ –≤—Ä–µ–º—è —Ç—ã –º–æ–∂–µ—à—å:**
‚Ä¢ –°–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫–∏
‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–æ–≤—ã–π —É—Ä–æ–∫
‚Ä¢ –ò–∑—É—á–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

–ë—É–¥—É —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞! üíö"""
        
        await query.edit_message_text(
            unsubscribe_text,
            reply_markup=get_lessons_unsubscribed_keyboard(),
            parse_mode='Markdown'
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏ —á–µ—Ä–µ–∑ callback")
    
    elif query.data == "sample_lesson":
        # –î–ª—è callback –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–∫–∞ –Ω–∞–ø—Ä—è–º—É—é
        user = query.from_user
        user_id = user.id
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        lesson = utils.get_next_lesson_for_user(user_id)
        formatted_lesson = utils.format_biology_lesson(lesson)
        
        await query.edit_message_text(
            formatted_lesson,
            reply_markup=get_lessons_after_sample_keyboard(utils.is_subscribed_to_biology_lessons(user_id)),
            parse_mode='Markdown'
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –±–∏–æ–ª–æ–≥–∏–∏ —á–µ—Ä–µ–∑ callback")
    
    elif query.data == "lessons_menu":
        # –î–ª—è callback –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É—Ä–æ–∫–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
        user = query.from_user
        user_id = user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        is_subscribed = utils.is_subscribed_to_biology_lessons(user_id)
        
        if is_subscribed:
            lessons_text = """üß¨ **–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏**

‚úÖ –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–∏–Ω–∏-—É—Ä–æ–∫–∏!

üìÖ **–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00 —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –Ω–æ–≤—ã–π —É—Ä–æ–∫
‚Ä¢ –£—Ä–æ–∫–∏ –ø—Ä–æ—Å—Ç—ã–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ
‚Ä¢ –ö–∞–∂–¥—ã–π —É—Ä–æ–∫ —Å —Ñ–∞–∫—Ç–∞–º–∏ –∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è

üéØ **–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:**"""
            
            await query.edit_message_text(
                lessons_text,
                reply_markup=get_lessons_subscribed_keyboard(),
                parse_mode='Markdown'
            )
        else:
            lessons_text = """üß¨ **–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏**

–•–æ—á–µ—à—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —É–∑–Ω–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –æ –º–∏—Ä–µ –±–∏–æ–ª–æ–≥–∏–∏? üå±

üìö **–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:**
‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ –∏ –ø–æ–Ω—è—Ç–Ω—ã–µ —É—Ä–æ–∫–∏
‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∂–∏–≤–æ–π –ø—Ä–∏—Ä–æ–¥–µ
‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
‚Ä¢ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø—Ä–æ—Å—Ç–æ–π —è–∑—ã–∫

‚è∞ **–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:** –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∏–∑—É—á–µ–Ω–∏—é —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–∏—Ä–∞ –±–∏–æ–ª–æ–≥–∏–∏! üî¨"""
            
            await query.edit_message_text(
                lessons_text,
                reply_markup=get_lessons_unsubscribed_keyboard(),
                parse_mode='Markdown'
            )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏ —á–µ—Ä–µ–∑ callback")

async def lessons_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /lessons - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º–∏ —É—Ä–æ–∫–∞–º–∏ –±–∏–æ–ª–æ–≥–∏–∏"""
    user = update.effective_user
    user_id = user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
    is_subscribed = utils.is_subscribed_to_biology_lessons(user_id)
    
    if is_subscribed:
        lessons_text = """üß¨ **–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏**

‚úÖ –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–∏–Ω–∏-—É—Ä–æ–∫–∏!

üìÖ **–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00 —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –Ω–æ–≤—ã–π —É—Ä–æ–∫
‚Ä¢ –£—Ä–æ–∫–∏ –ø—Ä–æ—Å—Ç—ã–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ
‚Ä¢ –ö–∞–∂–¥—ã–π —É—Ä–æ–∫ —Å —Ñ–∞–∫—Ç–∞–º–∏ –∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è

üéØ **–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:**"""
        
        await update.message.reply_text(
            lessons_text,
            reply_markup=get_lessons_subscribed_keyboard(),
            parse_mode='Markdown'
        )
    else:
        lessons_text = """üß¨ **–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏**

–•–æ—á–µ—à—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —É–∑–Ω–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –æ –º–∏—Ä–µ –±–∏–æ–ª–æ–≥–∏–∏? üå±

üìö **–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:**
‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ –∏ –ø–æ–Ω—è—Ç–Ω—ã–µ —É—Ä–æ–∫–∏
‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∂–∏–≤–æ–π –ø—Ä–∏—Ä–æ–¥–µ
‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
‚Ä¢ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø—Ä–æ—Å—Ç–æ–π —è–∑—ã–∫

‚è∞ **–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:** –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∏–∑—É—á–µ–Ω–∏—é —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–∏—Ä–∞ –±–∏–æ–ª–æ–≥–∏–∏! üî¨"""
        
        await update.message.reply_text(
            lessons_text,
            reply_markup=get_lessons_unsubscribed_keyboard(),
            parse_mode='Markdown'
        )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    await utils.check_and_send_promo(update, context, user_id)
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏")

async def subscribe_lessons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏"""
    user = update.effective_user
    user_id = user.id
    
    # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    utils.subscribe_to_biology_lessons(user_id)
    
    success_text = """‚úÖ **–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!**

üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–∏–Ω–∏-—É—Ä–æ–∫–∏ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏!

üìÖ **–ß—Ç–æ –¥–∞–ª—å—à–µ:**
‚Ä¢ –ü–µ—Ä–≤—ã–π —É—Ä–æ–∫ –ø—Ä–∏–¥–µ—Ç –∑–∞–≤—Ç—Ä–∞ –≤ 10:00
‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–æ–≤–∞—è —Ç–µ–º–∞
‚Ä¢ –£—Ä–æ–∫–∏ –±—É–¥—É—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –∏ –ø—Ä–æ—Å—Ç—ã–º–∏

üî¨ –ê –ø–æ–∫–∞ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üëá"""
    
    await update.message.reply_text(
        success_text,
        reply_markup=get_lessons_subscribed_keyboard(),
        parse_mode='Markdown'
    )
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —É—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏")

async def unsubscribe_lessons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏"""
    user = update.effective_user
    user_id = user.id
    
    # –û—Ç–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    utils.unsubscribe_from_biology_lessons(user_id)
    
    unsubscribe_text = """‚ùå **–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞**

–ñ–∞–ª—å, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏! üò¢

üîÑ **–í –ª—é–±–æ–µ –≤—Ä–µ–º—è —Ç—ã –º–æ–∂–µ—à—å:**
‚Ä¢ –°–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫–∏
‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–æ–≤—ã–π —É—Ä–æ–∫
‚Ä¢ –ò–∑—É—á–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

–ë—É–¥—É —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞! üíö"""
    
    await update.message.reply_text(
        unsubscribe_text,
        reply_markup=get_lessons_unsubscribed_keyboard(),
        parse_mode='Markdown'
    )
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏")

async def get_sample_lesson(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –±–∏–æ–ª–æ–≥–∏–∏"""
    user = update.effective_user
    user_id = user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lesson = utils.get_next_lesson_for_user(user_id)
    formatted_lesson = utils.format_biology_lesson(lesson)
    
    await update.message.reply_text(
        formatted_lesson,
        reply_markup=get_lessons_after_sample_keyboard(utils.is_subscribed_to_biology_lessons(user_id)),
        parse_mode='Markdown'
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    await utils.check_and_send_promo(update, context, user_id)
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –±–∏–æ–ª–æ–≥–∏–∏")

async def send_daily_lessons(context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    subscribed_users = utils.get_subscribed_users()
    
    if not subscribed_users:
        logger.info("–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Ä–æ–∫–æ–≤")
        return
    
    logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ {len(subscribed_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    
    for user_id in subscribed_users:
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            lesson = utils.get_next_lesson_for_user(user_id)
            formatted_lesson = utils.format_biology_lesson(lesson)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Ä–æ–∫
            await context.bot.send_message(
                chat_id=user_id,
                text=formatted_lesson,
                parse_mode='Markdown'
            )
            
            logger.info(f"–£—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Ä–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {context.error}")
    
    if update and update.effective_message:
        await update.effective_message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ! üîÑ",
            reply_markup=get_restart_keyboard()
        )
